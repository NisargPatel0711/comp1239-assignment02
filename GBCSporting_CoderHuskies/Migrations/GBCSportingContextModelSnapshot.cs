// <auto-generated />
using System;
using GBCSporting_CoderHuskies.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GBCSporting_CoderHuskies.Migrations
{
    [DbContext(typeof(GBCSportingContext))]
    partial class GBCSportingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GBCSporting_CoderHuskies.Models.Country", b =>
                {
                    b.Property<string>("CountryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            CountryId = "AUS",
                            Name = "Australia"
                        },
                        new
                        {
                            CountryId = "BRA",
                            Name = "Brazil"
                        },
                        new
                        {
                            CountryId = "CAN",
                            Name = "Canada"
                        },
                        new
                        {
                            CountryId = "CHN",
                            Name = "China"
                        },
                        new
                        {
                            CountryId = "EGY",
                            Name = "Egypt"
                        },
                        new
                        {
                            CountryId = "FRA",
                            Name = "France"
                        },
                        new
                        {
                            CountryId = "IND",
                            Name = "India"
                        },
                        new
                        {
                            CountryId = "ARE",
                            Name = "United Arab Emirates"
                        },
                        new
                        {
                            CountryId = "GBR",
                            Name = "United Kingdom of Great Britain and Northern Ireland"
                        },
                        new
                        {
                            CountryId = "USA",
                            Name = "United States of America"
                        });
                });

            modelBuilder.Entity("GBCSporting_CoderHuskies.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.HasIndex("CountryId");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "5 Concord Place",
                            City = "North York",
                            CountryId = "CAN",
                            Email = "ksmith98@gmail.com",
                            FirstName = "Kevin",
                            LastName = "Smith",
                            PostalCode = "M16 8J9",
                            State = "Ontario"
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "A-501 Nirman Tower",
                            City = "Ahmedabad",
                            CountryId = "IND",
                            FirstName = "Jerry",
                            LastName = "Patel",
                            Phone = "9727243403",
                            PostalCode = "380005",
                            State = "Gujarat"
                        },
                        new
                        {
                            CustomerId = 3,
                            Address = "145 Queens street",
                            City = "Toronto",
                            CountryId = "CAN",
                            Email = "jacob1758@gmail.com",
                            FirstName = "Jacob",
                            LastName = "Rogers",
                            Phone = "416-321-4567",
                            PostalCode = "M25 8F7",
                            State = "Ontario"
                        },
                        new
                        {
                            CustomerId = 4,
                            Address = "698 Flash Avenue",
                            City = "New York",
                            CountryId = "USA",
                            FirstName = "Bruce",
                            LastName = "Wayne",
                            PostalCode = "NY 10024",
                            State = "New York"
                        },
                        new
                        {
                            CustomerId = 5,
                            Address = "2616 Mason Heights",
                            City = "Mississauga",
                            CountryId = "CAN",
                            Email = "stuartj007@gmail.com",
                            FirstName = "John",
                            LastName = "Stuart",
                            PostalCode = "L5B 2S2",
                            State = "Ontario"
                        });
                });

            modelBuilder.Entity("GBCSporting_CoderHuskies.Models.Incident", b =>
                {
                    b.Property<int>("IncidentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateClosed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOpened")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("TechnicianId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IncidentId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("TechnicianId");

                    b.ToTable("Incident");

                    b.HasData(
                        new
                        {
                            IncidentId = 1,
                            CustomerId = 2,
                            DateClosed = new DateTime(2021, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOpened = new DateTime(2021, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Giving error while accepting terms and condition",
                            ProductId = 2,
                            TechnicianId = 5,
                            Title = "Could Not Install"
                        },
                        new
                        {
                            IncidentId = 2,
                            CustomerId = 1,
                            DateClosed = new DateTime(2021, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gives Error while importing data from CSV file.",
                            ProductId = 1,
                            TechnicianId = 3,
                            Title = "Error importing data"
                        },
                        new
                        {
                            IncidentId = 3,
                            CustomerId = 4,
                            DateClosed = new DateTime(2021, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOpened = new DateTime(2021, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gives error on launching saying - 'Cannot Connect To Database'",
                            ProductId = 4,
                            TechnicianId = 1,
                            Title = "Error launching program"
                        },
                        new
                        {
                            IncidentId = 4,
                            CustomerId = 3,
                            DateClosed = new DateTime(2020, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Installer launches and immidiately",
                            ProductId = 3,
                            TechnicianId = 2,
                            Title = "Could Not Install"
                        });
                });

            modelBuilder.Entity("GBCSporting_CoderHuskies.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Code = "TRNY10",
                            Date = new DateTime(2015, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Trournament Master 1.0",
                            Price = 4.9900000000000002
                        },
                        new
                        {
                            ProductId = 2,
                            Code = "LEAG10",
                            Date = new DateTime(2016, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "League Scheduler 1.0",
                            Price = 4.9900000000000002
                        },
                        new
                        {
                            ProductId = 3,
                            Code = "DRAFT10",
                            Date = new DateTime(2017, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Draft Manager 1.0",
                            Price = 5.9900000000000002
                        },
                        new
                        {
                            ProductId = 4,
                            Code = "TEAM10",
                            Date = new DateTime(2015, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Team Manager 1.0",
                            Price = 7.9900000000000002
                        });
                });

            modelBuilder.Entity("GBCSporting_CoderHuskies.Models.Technician", b =>
                {
                    b.Property<int>("TechnicianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TechnicianId");

                    b.ToTable("Technician");

                    b.HasData(
                        new
                        {
                            TechnicianId = 1,
                            Email = "jasonc@sportspro.com",
                            Name = "Jason Chang",
                            Phone = "416-987-6543"
                        },
                        new
                        {
                            TechnicianId = 2,
                            Email = "csenior@sportspro.com",
                            Name = "Chris Senior",
                            Phone = "647-123-4567"
                        },
                        new
                        {
                            TechnicianId = 3,
                            Email = "johnmc@sportspro.com",
                            Name = "John McDonald",
                            Phone = "902-456-7890"
                        },
                        new
                        {
                            TechnicianId = 4,
                            Email = "alison@sportspro.com",
                            Name = "Alison Diaz",
                            Phone = "902-456-7890"
                        },
                        new
                        {
                            TechnicianId = 5,
                            Email = "gfiori@sportspro.com",
                            Name = "Gina Fiori",
                            Phone = "902-456-7890"
                        });
                });

            modelBuilder.Entity("GBCSporting_CoderHuskies.Models.Customer", b =>
                {
                    b.HasOne("GBCSporting_CoderHuskies.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GBCSporting_CoderHuskies.Models.Incident", b =>
                {
                    b.HasOne("GBCSporting_CoderHuskies.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBCSporting_CoderHuskies.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBCSporting_CoderHuskies.Models.Technician", "Technician")
                        .WithMany()
                        .HasForeignKey("TechnicianId");
                });
#pragma warning restore 612, 618
        }
    }
}
